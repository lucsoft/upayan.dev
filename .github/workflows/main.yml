name: Release on version change

on:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 'latest'

    - name: Install dependencies
      run: npm install

    - name: Get current package version
      id: current_version
      run: echo "::set-output name=VERSION::$(jq -r .version < package.json)"

    - name: Get previous package version
      id: previous_version
      run: echo "::set-output name=VERSION::$(git show HEAD~1:package.json | jq -r .version)"

    - name: Check if version changed
      id: version_check
      run: |
        if [ "${{ steps.current_version.outputs.VERSION }}" != "${{ steps.previous_version.outputs.VERSION }}" ]; then
          echo "Version has changed"
          echo "::set-output name=changed::true"
        else
          echo "Version has not changed"
          echo "::set-output name=changed::false"
        fi

    - name: Create GitHub Release
      if: steps.version_check.outputs.changed == 'true'
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.current_version.outputs.VERSION }}
        release_name: Release v${{ steps.current_version.outputs.VERSION }}
        body: |
          ## Changes
          $(git log --pretty=format:'- %s' HEAD...HEAD~1)
        draft: false
        prerelease: false
